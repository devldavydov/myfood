// Code generated by ent, DO NOT EDIT.

package activity

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/devldavydov/myfood/internal/storage/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.Activity {
	return predicate.Activity(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.Activity {
	return predicate.Activity(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.Activity {
	return predicate.Activity(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.Activity {
	return predicate.Activity(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.Activity {
	return predicate.Activity(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.Activity {
	return predicate.Activity(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.Activity {
	return predicate.Activity(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.Activity {
	return predicate.Activity(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.Activity {
	return predicate.Activity(sql.FieldLTE(FieldID, id))
}

// Userid applies equality check predicate on the "userid" field. It's identical to UseridEQ.
func Userid(v int64) predicate.Activity {
	return predicate.Activity(sql.FieldEQ(FieldUserid, v))
}

// Timestamp applies equality check predicate on the "timestamp" field. It's identical to TimestampEQ.
func Timestamp(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldEQ(FieldTimestamp, v))
}

// ActiveCal applies equality check predicate on the "active_cal" field. It's identical to ActiveCalEQ.
func ActiveCal(v float64) predicate.Activity {
	return predicate.Activity(sql.FieldEQ(FieldActiveCal, v))
}

// UseridEQ applies the EQ predicate on the "userid" field.
func UseridEQ(v int64) predicate.Activity {
	return predicate.Activity(sql.FieldEQ(FieldUserid, v))
}

// UseridNEQ applies the NEQ predicate on the "userid" field.
func UseridNEQ(v int64) predicate.Activity {
	return predicate.Activity(sql.FieldNEQ(FieldUserid, v))
}

// UseridIn applies the In predicate on the "userid" field.
func UseridIn(vs ...int64) predicate.Activity {
	return predicate.Activity(sql.FieldIn(FieldUserid, vs...))
}

// UseridNotIn applies the NotIn predicate on the "userid" field.
func UseridNotIn(vs ...int64) predicate.Activity {
	return predicate.Activity(sql.FieldNotIn(FieldUserid, vs...))
}

// UseridGT applies the GT predicate on the "userid" field.
func UseridGT(v int64) predicate.Activity {
	return predicate.Activity(sql.FieldGT(FieldUserid, v))
}

// UseridGTE applies the GTE predicate on the "userid" field.
func UseridGTE(v int64) predicate.Activity {
	return predicate.Activity(sql.FieldGTE(FieldUserid, v))
}

// UseridLT applies the LT predicate on the "userid" field.
func UseridLT(v int64) predicate.Activity {
	return predicate.Activity(sql.FieldLT(FieldUserid, v))
}

// UseridLTE applies the LTE predicate on the "userid" field.
func UseridLTE(v int64) predicate.Activity {
	return predicate.Activity(sql.FieldLTE(FieldUserid, v))
}

// TimestampEQ applies the EQ predicate on the "timestamp" field.
func TimestampEQ(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldEQ(FieldTimestamp, v))
}

// TimestampNEQ applies the NEQ predicate on the "timestamp" field.
func TimestampNEQ(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldNEQ(FieldTimestamp, v))
}

// TimestampIn applies the In predicate on the "timestamp" field.
func TimestampIn(vs ...time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldIn(FieldTimestamp, vs...))
}

// TimestampNotIn applies the NotIn predicate on the "timestamp" field.
func TimestampNotIn(vs ...time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldNotIn(FieldTimestamp, vs...))
}

// TimestampGT applies the GT predicate on the "timestamp" field.
func TimestampGT(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldGT(FieldTimestamp, v))
}

// TimestampGTE applies the GTE predicate on the "timestamp" field.
func TimestampGTE(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldGTE(FieldTimestamp, v))
}

// TimestampLT applies the LT predicate on the "timestamp" field.
func TimestampLT(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldLT(FieldTimestamp, v))
}

// TimestampLTE applies the LTE predicate on the "timestamp" field.
func TimestampLTE(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldLTE(FieldTimestamp, v))
}

// ActiveCalEQ applies the EQ predicate on the "active_cal" field.
func ActiveCalEQ(v float64) predicate.Activity {
	return predicate.Activity(sql.FieldEQ(FieldActiveCal, v))
}

// ActiveCalNEQ applies the NEQ predicate on the "active_cal" field.
func ActiveCalNEQ(v float64) predicate.Activity {
	return predicate.Activity(sql.FieldNEQ(FieldActiveCal, v))
}

// ActiveCalIn applies the In predicate on the "active_cal" field.
func ActiveCalIn(vs ...float64) predicate.Activity {
	return predicate.Activity(sql.FieldIn(FieldActiveCal, vs...))
}

// ActiveCalNotIn applies the NotIn predicate on the "active_cal" field.
func ActiveCalNotIn(vs ...float64) predicate.Activity {
	return predicate.Activity(sql.FieldNotIn(FieldActiveCal, vs...))
}

// ActiveCalGT applies the GT predicate on the "active_cal" field.
func ActiveCalGT(v float64) predicate.Activity {
	return predicate.Activity(sql.FieldGT(FieldActiveCal, v))
}

// ActiveCalGTE applies the GTE predicate on the "active_cal" field.
func ActiveCalGTE(v float64) predicate.Activity {
	return predicate.Activity(sql.FieldGTE(FieldActiveCal, v))
}

// ActiveCalLT applies the LT predicate on the "active_cal" field.
func ActiveCalLT(v float64) predicate.Activity {
	return predicate.Activity(sql.FieldLT(FieldActiveCal, v))
}

// ActiveCalLTE applies the LTE predicate on the "active_cal" field.
func ActiveCalLTE(v float64) predicate.Activity {
	return predicate.Activity(sql.FieldLTE(FieldActiveCal, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Activity) predicate.Activity {
	return predicate.Activity(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Activity) predicate.Activity {
	return predicate.Activity(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Activity) predicate.Activity {
	return predicate.Activity(sql.NotPredicates(p))
}
