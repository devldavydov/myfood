// Code generated by ent, DO NOT EDIT.

package usersettings

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the usersettings type in the database.
	Label = "user_settings"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUserid holds the string denoting the userid field in the database.
	FieldUserid = "userid"
	// FieldCalLimit holds the string denoting the cal_limit field in the database.
	FieldCalLimit = "cal_limit"
	// Table holds the table name of the usersettings in the database.
	Table = "user_settings"
)

// Columns holds all SQL columns for usersettings fields.
var Columns = []string{
	FieldID,
	FieldUserid,
	FieldCalLimit,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// OrderOption defines the ordering options for the UserSettings queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByUserid orders the results by the userid field.
func ByUserid(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUserid, opts...).ToFunc()
}

// ByCalLimit orders the results by the cal_limit field.
func ByCalLimit(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCalLimit, opts...).ToFunc()
}
